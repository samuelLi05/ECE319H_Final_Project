// images.h
// contains image buffers for simple space invaders
// Jonathan Valvano, March 5, 2018
// Capture image dimensions from BMP files

#ifndef __images_h
#define __images_h
#include <stdint.h>


// *************************** Images ***************************
// enemy ship that starts at the top of the screen (arms/mouth closed)
// includes two blacked out columns on the left and right sides of the image to prevent smearing when moved 2 pixels to the left or right
// includes one blacked out row on the top and bottom sides of the image to prevent smearing when moved 1 pixels to the up or down

// width=24 x height=20
const unsigned short redAlien[] = {
 0x0841, 0x0861, 0x0841, 0x0841, 0x0841, 0x0841, 0x0820, 0x0020, 0x0841, 0x0841, 0x0841, 0x0841, 0x0841, 0x0820, 0x0820, 0x0820,
 0x0841, 0x0820, 0x0820, 0x0820, 0x0820, 0x0820, 0x0841, 0x0841, 0x0861, 0x1082, 0x0861, 0x0000, 0x0000, 0x1061, 0x0841, 0x0841,
 0x0861, 0x0861, 0x0861, 0x0861, 0x0861, 0x0841, 0x0841, 0x0861, 0x0861, 0x0841, 0x0841, 0x0841, 0x0841, 0x0841, 0x0841, 0x0841,
 0x0820, 0x0861, 0x0841, 0x0840, 0x0000, 0x003E, 0x003E, 0x0843, 0x0043, 0x0021, 0x0840, 0x0841, 0x0861, 0x0820, 0x1080, 0x0024,
 0x0082, 0x004F, 0x003F, 0x005E, 0x0822, 0x1040, 0x0820, 0x0841, 0x0820, 0x0841, 0x0840, 0x1000, 0x000C, 0x083F, 0x001F, 0x001F,
 0x001F, 0x002A, 0x0020, 0x0021, 0x0041, 0x0021, 0x0022, 0x001F, 0x001F, 0x083F, 0x001F, 0x003E, 0x0042, 0x0840, 0x0841, 0x0841,
 0x0841, 0x0841, 0x0821, 0x0000, 0x0000, 0x0008, 0x001F, 0x001F, 0x001F, 0x001F, 0x0008, 0x0000, 0x0000, 0x0008, 0x083A, 0x001F,
 0x003E, 0x001F, 0x001F, 0x0007, 0x0000, 0x0820, 0x0841, 0x0841, 0x0841, 0x0841, 0x0820, 0x0820, 0x1040, 0x0860, 0x001F, 0x001F,
 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x0001, 0x0000, 0x0841, 0x0841, 0x0820, 0x0841,
 0x0841, 0x1061, 0x0841, 0x0841, 0x1040, 0x0861, 0x0000, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,
 0x001F, 0x0002, 0x0005, 0x0000, 0x0841, 0x0841, 0x0841, 0x0841, 0x0840, 0x0845, 0x0066, 0x1041, 0x0000, 0x0881, 0x001F, 0x189E,
 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x003E, 0x083F, 0x001F, 0x001F, 0x0000, 0x1060, 0x0820, 0x0821, 0x0034, 0x0841,
 0x0860, 0x0866, 0x20DB, 0x1001, 0x0000, 0x0839, 0x001F, 0x001F, 0x001F, 0x002C, 0x0844, 0x0845, 0x0865, 0x0844, 0x0007, 0x001F,
 0x003F, 0x003D, 0x085F, 0x081A, 0x0823, 0x0860, 0x005F, 0x0822, 0x1041, 0x0847, 0x20FD, 0x0003, 0x0006, 0x001F, 0x001F, 0x003E,
 0x001F, 0x0013, 0x002E, 0x002E, 0x082E, 0x082E, 0x000F, 0x001F, 0x003F, 0x001F, 0x001F, 0x001F, 0x0030, 0x002D, 0x001F, 0x0841,
 0x0800, 0x0847, 0x20FD, 0x003E, 0x001F, 0x001F, 0x001F, 0x001F, 0x001C, 0x081F, 0x081F, 0x081F, 0x081F, 0x081F, 0x001F, 0x001B,
 0x001C, 0x001F, 0x001F, 0x081E, 0x001F, 0x001F, 0x001F, 0x0841, 0x1021, 0x004A, 0x18BE, 0x001F, 0x003E, 0x001F, 0x001F, 0x081F,
 0x0041, 0x0036, 0x003F, 0x001F, 0x003F, 0x001F, 0x085F, 0x1040, 0x1046, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x081F, 0x0021,
 0x1062, 0x1063, 0x1066, 0x0029, 0x001F, 0x001F, 0x001F, 0x003F, 0x0001, 0x0005, 0x0001, 0x003F, 0x003F, 0x0036, 0x0001, 0x0000,
 0x0000, 0x001F, 0x001F, 0x001F, 0x002D, 0x0849, 0x1041, 0x1081, 0x0841, 0x1061, 0x0841, 0x0800, 0x0818, 0x0836, 0x001F, 0x001F,
 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001E, 0x083E, 0x0816, 0x1023, 0x1060, 0x0841, 0x0841,
 0x0841, 0x1061, 0x0860, 0x0020, 0x1023, 0x1843, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,
 0x001F, 0x001F, 0x101E, 0x1021, 0x0821, 0x0820, 0x0841, 0x0841, 0x1061, 0x10A2, 0x1061, 0x1061, 0x0881, 0x1083, 0x181B, 0x001F,
 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x003D, 0x0837, 0x0860, 0x0841, 0x0841, 0x0841, 0x0861,
 0x0841, 0x1082, 0x0841, 0x0841, 0x0060, 0x1883, 0x0820, 0x001F, 0x001F, 0x001F, 0x0002, 0x0000, 0x0000, 0x0002, 0x001F, 0x001F,
 0x001F, 0x0012, 0x0021, 0x0841, 0x0820, 0x0820, 0x0820, 0x0841, 0x0841, 0x1061, 0x0841, 0x0841, 0x0821, 0x1062, 0x0841, 0x20DB,
 0x0001, 0x0000, 0x0005, 0x0007, 0x0000, 0x0000, 0x0000, 0x0002, 0x20DD, 0x0021, 0x0821, 0x0841, 0x0841, 0x0820, 0x0841, 0x0841,
 0x0000, 0x10A2, 0x0861, 0x0861, 0x0861, 0x1082, 0x18D6, 0x20D8, 0x1061, 0x0861, 0x0841, 0x0841, 0x0862, 0x0861, 0x0041, 0x0060,
 0x18D8, 0x20FD, 0x0841, 0x0861, 0x0841, 0x0841, 0x0841, 0x0861, 0x3186, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,

};

// width=16 x height=15
const unsigned short smallAsteroid[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0041, 0x1ACC, 0x1A8B, 0x0925, 0x11C8, 0x11A7, 0x0925, 0x0062, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0882, 0x19C7, 0x22CC, 0x1AED, 0x122A, 0x11C8, 0x11C8, 0x1A09, 0x1A29, 0x00A3, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x1125, 0x19C7, 0x10E4, 0x1146, 0x1AAC, 0x1AED, 0x1209, 0x1125, 0x1145, 0x19C8, 0x1A29, 0x0020, 0x0000, 0x0000,
 0x0000, 0x0000, 0x19E8, 0x1145, 0x10E4, 0x11A7, 0x1AAC, 0x1ACC, 0x1A6B, 0x11E8, 0x11E8, 0x19C8, 0x228B, 0x08A2, 0x0000, 0x0000,
 0x0000, 0x0020, 0x1A09, 0x1925, 0x1125, 0x11E8, 0x1209, 0x1A6B, 0x226B, 0x1B0E, 0x1B0E, 0x1A2A, 0x1A29, 0x1104, 0x0000, 0x0000,
 0x0000, 0x0000, 0x1A2A, 0x1A6A, 0x1A4A, 0x124A, 0x1209, 0x1A4A, 0x1A29, 0x1145, 0x122A, 0x12CD, 0x126A, 0x11E8, 0x0000, 0x0000,
 0x0000, 0x0041, 0x11E9, 0x11E8, 0x11C8, 0x1229, 0x124A, 0x19A7, 0x1125, 0x1124, 0x10E4, 0x124A, 0x1B0E, 0x1A8B, 0x0000, 0x0000,
 0x0000, 0x0020, 0x0925, 0x1209, 0x11E9, 0x11E8, 0x1A8C, 0x1A6A, 0x1124, 0x1966, 0x1966, 0x1145, 0x22ED, 0x1A6A, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0882, 0x1A29, 0x128C, 0x124A, 0x124B, 0x1ACD, 0x1A2A, 0x11A7, 0x19E8, 0x1A6B, 0x1A8B, 0x0904, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0882, 0x2209, 0x19C7, 0x1986, 0x19E8, 0x1A4A, 0x22ED, 0x1A8B, 0x1A8B, 0x1209, 0x1986, 0x0841, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0861, 0x1925, 0x10E4, 0x1966, 0x10E4, 0x19A7, 0x232E, 0x230E, 0x22AB, 0x11C8, 0x0882, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x1945, 0x19E8, 0x11A7, 0x11A7, 0x1A09, 0x22AB, 0x1AAC, 0x1A6A, 0x1A29, 0x0061, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0841, 0x10C3, 0x1986, 0x226A, 0x2229, 0x21E8, 0x19A7, 0x1966, 0x1125, 0x0020, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1082, 0x10C3, 0x08A2, 0x0861, 0x0820, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,

};


// width=31 x height=29
const unsigned short bigAsteroid[] = {
 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1AAC, 0x230D, 0x1A4A, 0x0925, 0x08E4, 0x0945,
 0x0966, 0x0946, 0x0945, 0x08C3, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x11C8, 0x1B0D, 0x1B4F, 0x1B2E, 0x0987, 0x0966, 0x124A, 0x126B,
 0x122A, 0x124A, 0x1A6B, 0x1A4A, 0x19C8, 0x0924, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0021, 0x19E8, 0x2B4E, 0x232E, 0x1B2E, 0x1B0E, 0x1229, 0x11E8, 0x1229, 0x11E8, 0x11C8,
 0x11A7, 0x11C8, 0x19C8, 0x19C8, 0x19E9, 0x0925, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0904, 0x19C8, 0x19C7, 0x1145, 0x19E8, 0x1ACC, 0x1AED, 0x1A6B, 0x1A8B, 0x122A, 0x1166, 0x1145, 0x11A7,
 0x11A7, 0x19A7, 0x19E8, 0x1A4A, 0x124A, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0841, 0x19A7, 0x19E8, 0x1145, 0x1104, 0x0861, 0x0904, 0x126B, 0x1A8C, 0x1A6B, 0x1AAC, 0x1ACC, 0x11C7, 0x10E4, 0x19C8, 0x19E8,
 0x19C7, 0x1986, 0x1A09, 0x1AAC, 0x1166, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1987,
 0x226B, 0x1166, 0x1124, 0x1945, 0x10E3, 0x0925, 0x126B, 0x12AC, 0x128B, 0x1ACD, 0x1B4F, 0x1A6B, 0x1104, 0x1125, 0x1166, 0x1104,
 0x10C3, 0x0945, 0x1AAC, 0x22AC, 0x10E4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x228B, 0x19E8,
 0x1124, 0x1945, 0x1945, 0x10E3, 0x11A7, 0x128B, 0x1ACC, 0x128B, 0x1ACC, 0x1B0E, 0x1A4A, 0x11A7, 0x1166, 0x1186, 0x1166, 0x1186,
 0x11C7, 0x1A6A, 0x22CC, 0x1945, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1A09, 0x11A7, 0x1125,
 0x1145, 0x1104, 0x08E4, 0x11C8, 0x1A8B, 0x1AED, 0x126B, 0x1A8B, 0x1AAC, 0x1A2A, 0x1A4A, 0x1ACD, 0x1B0E, 0x1ACC, 0x1A4A, 0x1A29,
 0x1A4A, 0x1A6B, 0x1125, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1A6A, 0x19E8, 0x10A2, 0x10A2,
 0x10A2, 0x1146, 0x11C8, 0x1A09, 0x1A2A, 0x1209, 0x1A6B, 0x22AC, 0x1A4A, 0x228B, 0x1B2E, 0x1B4F, 0x1AED, 0x1A4A, 0x1A09, 0x1A4A,
 0x1A4A, 0x1166, 0x0882, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x22CC, 0x224A, 0x1986, 0x2166, 0x21C7,
 0x1A29, 0x19E8, 0x19E8, 0x11C7, 0x11C8, 0x1A8B, 0x22CC, 0x1A09, 0x1A4A, 0x1AAC, 0x12CD, 0x128C, 0x124A, 0x122A, 0x1229, 0x1A09,
 0x11A7, 0x1125, 0x0882, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1A8B, 0x1A6B, 0x228B, 0x228B, 0x1A8B, 0x1A6B,
 0x1A6A, 0x124A, 0x122A, 0x11C8, 0x1A4A, 0x230D, 0x224A, 0x19A7, 0x1186, 0x1209, 0x12AC, 0x12CD, 0x12AC, 0x126A, 0x124A, 0x1209,
 0x11A7, 0x1966, 0x0041, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1229, 0x126B, 0x124A, 0x122A, 0x1209, 0x122A, 0x122A,
 0x126B, 0x12AC, 0x11E8, 0x19C8, 0x22CC, 0x1987, 0x10A2, 0x10A2, 0x10A2, 0x11A7, 0x1ACD, 0x130E, 0x12AC, 0x12AC, 0x128B, 0x122A,
 0x19A7, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0882, 0x11C8, 0x1229, 0x11C8, 0x11A7, 0x11C7, 0x1209, 0x11E8, 0x122A,
 0x126B, 0x11A7, 0x1987, 0x19A7, 0x10A3, 0x1166, 0x1986, 0x1104, 0x0882, 0x1186, 0x1AED, 0x1B2E, 0x230D, 0x12AC, 0x126A, 0x1186,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1125, 0x11A7, 0x1229, 0x11A7, 0x1166, 0x11A7, 0x11E8, 0x11C8, 0x122A, 0x126B,
 0x1209, 0x19E8, 0x1904, 0x10C3, 0x19A7, 0x1986, 0x1987, 0x1145, 0x10A3, 0x11A7, 0x22ED, 0x22ED, 0x1AAC, 0x1A6B, 0x1966, 0x0882,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0082, 0x1209, 0x1209, 0x11E9, 0x1209, 0x1209, 0x11E8, 0x122A, 0x1ACD, 0x1B0E,
 0x22AB, 0x1925, 0x10E3, 0x1966, 0x1945, 0x19C7, 0x19C7, 0x1104, 0x10E4, 0x1A6B, 0x22ED, 0x1A8B, 0x1A08, 0x1945, 0x1082, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x11A7, 0x1209, 0x1209, 0x126B, 0x126B, 0x11E9, 0x11A8, 0x1A4A, 0x1B0D, 0x230E,
 0x1A29, 0x19C7, 0x1986, 0x1125, 0x1986, 0x19A7, 0x19A7, 0x19E8, 0x1ACC, 0x1ACD, 0x1A6B, 0x1166, 0x18C3, 0x1082, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1166, 0x11C8, 0x11E8, 0x0A6B, 0x0A6B, 0x122A, 0x11C8, 0x1209, 0x126B, 0x1ACD, 0x1AAC,
 0x1A4A, 0x1A09, 0x1186, 0x1986, 0x19E8, 0x226B, 0x1AAC, 0x1AAB, 0x1A8B, 0x1187, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x1966, 0x224A, 0x1A8B, 0x1AAC, 0x1A8B, 0x1A8B, 0x1A8B, 0x128C, 0x126B, 0x126B, 0x1A4A, 0x1A6B,
 0x1A8B, 0x1A29, 0x124A, 0x1A8B, 0x1AAC, 0x1A29, 0x19E8, 0x19A7, 0x08A2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x1945, 0x226B, 0x226B, 0x19E8, 0x1966, 0x1145, 0x1986, 0x2209, 0x1A4A, 0x1A4A, 0x22AC, 0x230E, 0x1ACC,
 0x1A4A, 0x1A6B, 0x12AC, 0x126B, 0x1166, 0x1987, 0x21E8, 0x18E4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x18E4, 0x1904, 0x0882, 0x1061, 0x10A2, 0x10C3, 0x10A2, 0x10A2, 0x2186, 0x19E8, 0x228B, 0x2B6F, 0x234F, 0x22AC,
 0x224A, 0x1A8B, 0x1A29, 0x1125, 0x1166, 0x1125, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x18C3, 0x2145, 0x10E3, 0x10E4, 0x1986, 0x1A09, 0x1A09, 0x10E4, 0x10E4, 0x19C7, 0x1A09, 0x234E, 0x236F, 0x230E, 0x22AC,
 0x22AC, 0x1A6A, 0x1146, 0x08E4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x1082, 0x29E8, 0x2208, 0x19A7, 0x11A7, 0x11C8, 0x11C8, 0x1104, 0x1125, 0x19E8, 0x1A09, 0x230D, 0x232E, 0x1AAC, 0x1A6B, 0x1AAB,
 0x1AAC, 0x11E8, 0x0904, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020,
 0x10C3, 0x19C7, 0x2229, 0x19C8, 0x1166, 0x1125, 0x1145, 0x222A, 0x1A2A, 0x19C8, 0x22AC, 0x22CC, 0x1A29, 0x1A09, 0x1229, 0x124A,
 0x1209, 0x0925, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841,
 0x1082, 0x1925, 0x19A7, 0x1987, 0x19C8, 0x226A, 0x22ED, 0x226A, 0x19A7, 0x2229, 0x228B, 0x1A08, 0x19C8, 0x11C8, 0x19C8, 0x19C8,
 0x08E4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18E3,
 0x0861, 0x10A3, 0x1987, 0x224A, 0x224A, 0x1A08, 0x19C7, 0x21A7, 0x21E8, 0x21E8, 0x1966, 0x1925, 0x1945, 0x1925, 0x10E4, 0x0041,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0841, 0x0882, 0x1924, 0x1965, 0x1945, 0x2186, 0x2145, 0x10C3, 0x1082, 0x1082, 0x18C2, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x18C3, 0x1082, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000,
};


// width=27 x height=25
const unsigned short bluespaceship[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18C1, 0x0840, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x0020, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x18C1, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA446, 0x1060, 0x0820, 0x0840, 0x1040, 0x0840, 0x0820, 0x0020,
 0x0840, 0x1060, 0x1080, 0x1080, 0x1080, 0x0840, 0x0820, 0x0020, 0x0820, 0x1040, 0x0840, 0x0840, 0x0820, 0xA446, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0xC528, 0x4182, 0x4181, 0x7241, 0x7241, 0x4182, 0x4182, 0x49C2, 0x5A03, 0x5A03, 0xA3A4, 0xA3A4, 0xA3A4,
 0x5A03, 0x4182, 0x49C2, 0x4182, 0x7241, 0x7241, 0x7241, 0x4181, 0xC528, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xC528, 0x4182,
 0xB404, 0xBC46, 0xBC46, 0xBC46, 0xBC46, 0xCCE6, 0x5A03, 0xA3A4, 0xEECE, 0xEECE, 0xEECE, 0x5A03, 0x6201, 0xCCE6, 0xBC46, 0xBC46,
 0xBC46, 0xBC46, 0xB404, 0xC528, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xC528, 0x7241, 0xB404, 0xB404, 0xE5C9, 0xCCE6, 0xCCE6,
 0xEEAC, 0x5A03, 0x61C1, 0x61C1, 0x61C1, 0x61C1, 0x5A03, 0x92E1, 0xEEAC, 0xCCE6, 0xE5C9, 0xB404, 0xB404, 0xB404, 0xC528, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xC528, 0x7241, 0xB404, 0xFFF5, 0xFFF5, 0xCCE6, 0xCCE6, 0xEEAC, 0x59C1, 0x8410, 0x8410, 0x8410,
 0x8410, 0x59C1, 0x92E1, 0xEEAC, 0xCCE6, 0xFFF5, 0xFFF5, 0xFFF5, 0xB404, 0xC528, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020,
 0x0820, 0x1080, 0x4A04, 0xEE29, 0xFFF5, 0xFFF5, 0xFF52, 0x59C1, 0x8410, 0xA514, 0xA514, 0xA514, 0x59C1, 0xCCE6, 0xFF52, 0xFFF5,
 0xEE29, 0x7B66, 0x4A04, 0x1080, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x2922, 0xEE29, 0xFFF5,
 0xFFF5, 0xFF52, 0x59C1, 0x8410, 0xA514, 0xA514, 0xA514, 0x59C1, 0xCCE6, 0xFF52, 0xFFF5, 0xEE29, 0x4A24, 0x2922, 0x0020, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x2922, 0xEE29, 0xEE29, 0xFF52, 0x4A49, 0x8410, 0xA534,
 0xA534, 0xA534, 0x4A49, 0x61C1, 0xFF52, 0xEE29, 0x2922, 0x1080, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x1080, 0x5244, 0x8388, 0xFF52, 0x5ACB, 0x8410, 0xA534, 0xA534, 0xA534, 0x5ACB, 0x61C1, 0xFF52,
 0x8388, 0x1080, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x2922, 0x5A86, 0xFF52, 0x8410, 0x8410, 0xA514, 0xA514, 0xA514, 0x8410, 0x61C1, 0xFF52, 0x5A86, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2102, 0x5265, 0xFF52, 0x8410, 0x7BCF,
 0x4A69, 0x4A69, 0x4A69, 0x8410, 0x61C1, 0xFF52, 0x5265, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20E2, 0x4A24, 0xDE6B, 0x8410, 0x39C7, 0x73AE, 0x73AE, 0x73AE, 0x8410, 0x61C1,
 0xDE6B, 0x4A44, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x20E1, 0x4A24, 0xDE6B, 0x8410, 0x39C7, 0x73AE, 0x73AE, 0x73AE, 0x8410, 0x61C1, 0xDE6B, 0x4A24, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20E1, 0x4A04, 0xE60D, 0x8410,
 0x39C7, 0x738E, 0x738E, 0x738E, 0x8410, 0x59C1, 0xE60D, 0x4A04, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18C1, 0x41E3, 0xE60B, 0x630C, 0x630C, 0x4A69, 0x4A69, 0x4A69, 0x630C,
 0xE60B, 0xE60B, 0x41E3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0020, 0x1081, 0x5A65, 0x52AA, 0x39E7, 0xFFEF, 0xFFEF, 0xFFEF, 0x52AA, 0xE60B, 0x5A65, 0x1081, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0x41A3,
 0x5289, 0x4205, 0xFFEF, 0xFFEF, 0xFFEF, 0x528A, 0xE60B, 0x41A3, 0x0820, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1060, 0x1081, 0x2942, 0xFFEF, 0xFFEF, 0xFFEF,
 0x1081, 0x18A0, 0x1060, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0x0860, 0x2942, 0xFFEF, 0xFFEF, 0xFFEF, 0x0860, 0x0840, 0x0820, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0840, 0x18E1, 0xE5C7, 0xEDC7, 0xE5C7, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x1080, 0xE5A7, 0xEDC7,
 0xE5A7, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x18C3, 0x0000,
};

// width=16 x height=10
const uint16_t SmallEnemy10pointA[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};




// enemy ship that starts at the top of the screen (arms/mouth open)
// includes two blacked out columns on the left and right sides of the image to prevent smearing when moved 2 pixels to the left or right
// includes one blacked out row on the top and bottom sides of the image to prevent smearing when moved 1 pixels to the up or down
// width=16 x height=10
const uint16_t SmallEnemy10pointB[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};

// enemy ship that starts in the middle of the screen (arms together)
// includes two blacked out columns on the left and right sides of the image to prevent smearing when moved 2 pixels to the left or right
// includes one blacked out row on the top and bottom sides of the image to prevent smearing when moved 1 pixels to the up or down
// width=16 x height=10
const uint16_t SmallEnemy20pointA[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};

// enemy ship that starts in the middle of the screen (arms apart)
// includes two blacked out columns on the left and right sides of the image to prevent smearing when moved 2 pixels to the left or right
// includes one blacked out row on the top and bottom sides of the image to prevent smearing when moved 1 pixels to the up or down
// width=16 x height=10
const uint16_t SmallEnemy20pointB[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000,
 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};


// enemy ship that starts at the bottom of the screen (arms down)
// includes two blacked out columns on the left and right sides of the image to prevent smearing when moved 2 pixels to the left or right
// includes one blacked out row on the top and bottom sides of the image to prevent smearing when moved 1 pixels to the up or down
// width=16 x height=10
const uint16_t SmallEnemy30pointA[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};

// enemy ship that starts at the bottom of the screen (arms up)
// includes two blacked out columns on the left and right sides of the image to prevent smearing when moved 2 pixels to the left or right
// includes one blacked out row on the top and bottom sides of the image to prevent smearing when moved 1 pixels to the up or down
// width=16 x height=10
const uint16_t SmallEnemy30pointB[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};

// image of the player's ship
// includes two blacked out columns on the left and right sides of the image to prevent smearing when moved 2 pixels to the left or right
// width=18 x height=8
const uint16_t PlayerShip0[] = {
 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000,
 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000,
 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
};
// image of the player's ship, some damage
// includes two blacked out columns on the left and right sides of the image to prevent smearing when moved 2 pixels to the left or right
// width=18 x height=8
const uint16_t PlayerShip1[] = {
 0x0000, 0x0000, 0x07E0, 0x07E0, 0x001F, 0x001F, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000,
 0x0000, 0x0000, 0x07E0, 0x001F, 0x001F, 0x001F, 0x001F, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000,
 0x0000, 0x0000, 0x07E0, 0x07E0, 0x001F, 0x001F, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
};
// image of the player's ship, more damage
// includes two blacked out columns on the left and right sides of the image to prevent smearing when moved 2 pixels to the left or right
// width=18 x height=8
const uint16_t PlayerShip2[] = {
 0x0000, 0x0000, 0x07E0, 0x07E0, 0x001F, 0x001F, 0x001F, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x001F, 0x001F, 0x001F, 0x07E0, 0x07E0, 0x0000, 0x0000,
 0x0000, 0x0000, 0x07E0, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x07E0, 0x07E0, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x07E0, 0x0000, 0x0000,
 0x0000, 0x0000, 0x07E0, 0x07E0, 0x001F, 0x001F, 0x001F, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x001F, 0x001F, 0x001F, 0x07E0, 0x07E0, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
};
// image of the player's ship, lots of damage
// includes two blacked out columns on the left and right sides of the image to prevent smearing when moved 2 pixels to the left or right
// width=18 x height=8
const uint16_t PlayerShip3[] = {
 0x0000, 0x0000, 0x001F, 0x07E0, 0x001F, 0x001F, 0x001F, 0x07E0, 0x001F, 0x001F, 0x07E0, 0x001F, 0x001F, 0x001F, 0x07E0, 0x001F, 0x0000, 0x0000,
 0x0000, 0x0000, 0x07E0, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x07E0, 0x07E0, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x07E0, 0x0000, 0x0000,
 0x0000, 0x0000, 0x001F, 0x07E0, 0x001F, 0x001F, 0x001F, 0x07E0, 0x07E0, 0x07E0, 0x07E0, 0x001F, 0x001F, 0x001F, 0x07E0, 0x001F, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x07E0, 0x001F, 0x07E0, 0x001F, 0x07E0, 0x001F, 0x001F, 0x07E0, 0x07E0, 0x07E0, 0x001F, 0x07E0, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001F, 0x001F, 0x001F, 0x001F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x07E0, 0x001F, 0x001F, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x07E0, 0x07E0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
};

// small shield floating in space to cover the player's ship from enemy fire (undamaged)
// width=18 x height=5
const uint16_t Bunker0[] = {
 0x079F, 0x079F, 0x079F, 0x079F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x079F, 0x079F, 0x079F, 0x079F,
 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F,
 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F,
 0x0000, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x0000,
 0x0000, 0x0000, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x079F, 0x0000, 0x0000,

};

#endif /* __images_h */
